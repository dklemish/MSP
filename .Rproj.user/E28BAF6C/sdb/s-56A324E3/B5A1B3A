{
    "collab_server" : "",
    "contents" : "library(ggplot2)\nlibrary(evir) # for MLE testing of marginals\nlibrary(MSP)\nlibrary(stabledist)\n\nn <- 100\nalpha <- 0.95\n# 1 dimensional simulation\ntest1 <- simMSP(n=n, dim=1, model=\"Brown-Resnick\")\ntest2 <- simMSP(n=n, dim=1, model=\"extremeGauss\")\ntest3 <- simMSP(n=n, dim=1, model=\"extremeT\", alpha=2)\ntest4 <- simMSP(n=n, dim=1, model=\"extremeT\", alpha=3)\ntest5 <- simMSP(n=n, dim=1, model=\"Reich-Shaby\", nknots=100, bw=0.5, alpha=alpha, keepPsi=TRUE)\n\nplot.data <- data.frame(\n  X = c(test1$X, test2$X, test3$X, test4$X, test5$X),\n  Z = c(test1$Z, test2$Z, test3$Z, test4$Z, test5$Z), \n  model = factor(c(rep(\"Brown-Resnick\",n), rep(\"extremeGauss\", n), rep(\"extremeT_2\", n),\n                   rep(\"extremeT_3\", n), rep(\"Reich-Shaby\", n))))\n\nggplot(data=plot.data, aes(x=X, y=Z, color=model)) + geom_line() + theme_bw()\n\n\n### Test marginal distributions are unit Frechet\nn <- 100\nn.sim <- 1000\nmarg.test.BR  <- matrix(0, nrow=n.sim, ncol=n)\nmarg.test.EG  <- matrix(0, nrow=n.sim, ncol=n)\nmarg.test.ET2 <- matrix(0, nrow=n.sim, ncol=n)\nmarg.test.ET3 <- matrix(0, nrow=n.sim, ncol=n)\nmarg.test.RS <- matrix(0, nrow=n.sim, ncol=n)\nmarg.test.RS.A <- matrix(0, nrow=n.sim, ncol=n)\nmarg.test.RS.U <- matrix(0, nrow=n.sim, ncol=n)\n\nfor(i in 1:n.sim){\n  marg.test.BR[i,]  <- simMSP(n=n, dim=1, model=\"Brown-Resnick\", seed=i)$Z\n  marg.test.EG[i,]  <- simMSP(n=n, dim=1, model=\"extremeGauss\", seed=i)$Z\n  marg.test.ET2[i,] <- simMSP(n=n, dim=1, model=\"extremeT\", seed=i, alpha=2)$Z\n  marg.test.ET3[i,] <- simMSP(n=n, dim=1, model=\"extremeT\", seed=i, alpha=3)$Z\n  mod <- simMSP(n=n, model=\"Reich-Shaby\", nknots=100, bw=0.01, alpha=alpha, seed=i, keepPsi = TRUE)\n  marg.test.RS[i,] <- mod$Z\n  marg.test.RS.A[i,] <- mod$A\n  marg.test.RS.U[i,] <- mod$U\n}\n\n# Should all be gev(1,1,1)\ntest <- gev(c(marg.test.BR));  test$par.ests; test$par.ses\ntest <- gev(c(marg.test.EG));  test$par.ests; test$par.ses\ntest <- gev(c(marg.test.ET2)); test$par.ests; test$par.ses\ntest <- gev(c(marg.test.ET3)); test$par.ests; test$par.ses\ntest <- gev(c(marg.test.RS)); test$par.ests; test$par.ses\n\n# Should be gev(alpha, alpha, 1)\ntest <- gev(c(marg.test.RS.U)); test$par.ests; test$par.ses\n\nks.test(c(marg.test.BR), \"pgev\", xi=1, sigma=1, mu=1)\nks.test(c(marg.test.EG), \"pgev\", xi=1, sigma=1, mu=1)\nks.test(c(marg.test.ET2), \"pgev\", xi=1, sigma=1, mu=1)\nks.test(c(marg.test.ET3), \"pgev\", xi=1, sigma=1, mu=1)\nks.test(c(marg.test.RS), \"pgev\", xi=1, sigma=1, mu=1)\nks.test(c(marg.test.RS.U), \"pgev\", xi=alpha, sigma=alpha, mu=1)\nks.test(c(marg.test.RS.A), \"pstable\", alpha=alpha, beta=1, pm=1)\n\n\n\n\n\n\n\n\n\nx <- seq(0,2,by=0.1)\nd <- dstable(x, 0.2, 1, 1, 0)\n\nggplot(data=data.frame(x=c(marg.test.RS.A)), aes(x=x)) + \n  geom_histogram(aes(y=..density..), col=\"black\", alpha=0.3, bins=100) + \n  geom_line(data=data.frame(x=x, y=d), aes(y=y), col=\"red\") + \n  lims(x=c(0,2))\n\n\nunitFrechet <- data.frame(x=seq(0,10,by=0.01), y=dgev(seq(0,10,by=0.01),1,1,1))\nggplot(data=data.frame(x=c(marg.test.BR)), aes(x=x)) + \n  geom_line(data=unitFrechet, aes(x=x,y=y), color=\"red\", size=1.5) + \n  geom_histogram(fill=\"blue\", alpha=0.5, aes(y=..density..), color=\"black\", bins=100) + \n  lims(x=c(0,10)) + theme_bw() + ggtitle(\"Brown-Resnick\")\n\nggplot(data=data.frame(x=c(marg.test.EG)), aes(x=x)) + \n  geom_line(data=unitFrechet, aes(x=x,y=y), color=\"red\", size=1.5) + \n  geom_histogram(fill=\"blue\", alpha=0.5, aes(y=..density..), color=\"black\", bins=100) + \n  lims(x=c(0,10)) + theme_bw() + ggtitle(\"Extreme Gauss\")\n\nggplot(data=data.frame(x=c(marg.test.ET2)), aes(x=x)) + \n  geom_line(data=unitFrechet, aes(x=x,y=y), color=\"red\", size=1.5) + \n  geom_histogram(fill=\"blue\", alpha=0.5, aes(y=..density..), color=\"black\", bins=100) + \n  lims(x=c(0,10)) + theme_bw() + ggtitle(\"Extreme T, alpha=2\")\n\nggplot(data=data.frame(x=c(marg.test.ET3)), aes(x=x)) + \n  geom_line(data=unitFrechet, aes(x=x,y=y), color=\"red\", size=1.5) + \n  geom_histogram(fill=\"blue\", alpha=0.5, aes(y=..density..), color=\"black\", bins=100) + \n  lims(x=c(0,10)) + theme_bw() + ggtitle(\"Extreme T, alpha=3\")\n\nggplot(data=data.frame(x=c(marg.test.RS)), aes(x=x)) + \n  geom_line(data=unitFrechet, aes(x=x,y=y), color=\"red\", size=1.5) + \n  geom_histogram(fill=\"blue\", alpha=0.5, aes(y=..density..), color=\"black\", bins=100) + \n  lims(x=c(0,10)) + theme_bw() + ggtitle(\"Reich-Shaby\")\n\n\n### 2 dimensional realizations\ntest1 <- simMSP(n=50, dim=2, model=\"Brown-Resnick\", nu=3, seed=6)\ntest2 <- simMSP(n=50, dim=2, model=\"extremeGauss\", nu=3, seed=6)\ntest3 <- simMSP(n=50, dim=2, model=\"extremeT\", nu=3, alpha=2, seed=6)\ntest4 <- simMSP(n=50, dim=2, model=\"Reich-Shaby\", alpha=0.10, seed=NULL)\n\nplot.data <- data.frame(cbind(test1$X, test1$Z))\ncolnames(plot.data) <- c(\"X\", \"Y\", \"Z\")\nggplot(data=data.frame(plot.data), aes(x=X, y=Y, z=Z)) + \n  geom_raster(aes(fill = Z)) + \n  scale_fill_gradientn(colors=terrain.colors(50)) + \n  geom_contour(color=\"white\")\n\nplot.data <- data.frame(cbind(test2$X, test2$Z))\ncolnames(plot.data) <- c(\"X\", \"Y\", \"Z\")\nggplot(data=data.frame(plot.data), aes(x=X, y=Y, z=Z)) + \n  geom_raster(aes(fill = Z)) + \n  scale_fill_gradientn(colors=terrain.colors(50)) + \n  geom_contour(color=\"white\")\n\nplot.data <- data.frame(cbind(test3$X, test3$Z))\ncolnames(plot.data) <- c(\"X\", \"Y\", \"Z\")\nggplot(data=data.frame(plot.data), aes(x=X, y=Y, z=Z)) + \n  geom_raster(aes(fill = Z)) + \n  scale_fill_gradientn(colors=terrain.colors(50)) + \n  geom_contour(color=\"white\")\n\nplot.data <- data.frame(cbind(test4$X, test4$Z))\ncolnames(plot.data) <- c(\"X\", \"Y\", \"Z\")\nggplot(data=data.frame(plot.data), aes(x=X, y=Y, z=Z)) + \n  geom_raster(aes(fill = Z)) + \n  scale_fill_gradientn(colors=terrain.colors(50)) + \n  geom_contour(color=\"white\")",
    "created" : 1508728791433.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2503264351",
    "id" : "B5A1B3A",
    "lastKnownWriteTime" : 1508847483,
    "last_content_update" : 1508847483977,
    "path" : "~/MaxStable/simExample.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}